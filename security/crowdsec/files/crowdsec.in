#!/bin/sh

# PROVIDE: crowdsec
# REQUIRE: LOGIN DAEMON NETWORKING
# KEYWORD: shutdown
#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# crowdsec_enable (bool):	Set it to YES to enable crowdsec agent.
#				Default is "NO".
# crowdsec_config (str):	Set the agent config path.
#				Default is "%%PREFIX%%/etc/crowdsec/config.yaml".
# crowdsec_flags (str):	Set the extra flags to run agent.
#				Default is ""

. /etc/rc.subr

name=crowdsec
desc="Crowdsec Agent"
rcvar=crowdsec_enable

load_rc_config $name

: ${crowdsec_enable:="NO"}
: ${crowdsec_config:="%%PREFIX%%/etc/crowdsec/config.yaml"}
: ${crowdsec_flags:=""}

pidfile=/var/run/${name}.pid
required_files="$crowdsec_config"
command="%%PREFIX%%/bin/${name}"
start_cmd="${name}_start"
start_precmd="${name}_precmd"
configtest_cmd="${name}_configtest"
extra_commands="configtest reload"

crowdsec_precmd() {
    HUB_DIR=`%%PREFIX%%/bin/cscli config show | grep 'Hub Folder' | head -1 | awk -F: '{gsub(/: /,":"); printf "%s", $2}'`
    if [ ! -d "${HUB_DIR}" ]; then
        mkdir -p "${HUB_DIR}"
        echo "Fetching hub inventory"
        %%PREFIX%%/bin/cscli hub update || :
    fi

    DATA_DIR=`%%PREFIX%%/bin/cscli config show | grep 'Data Folder' | awk -F: '{gsub(/: /,":"); printf "%s", $2}'`
    if [ ! -d "${DATA_DIR}" ]; then
        mkdir -p "${DATA_DIR}"
    fi

    if [ -z "`%%PREFIX%%/bin/cscli machines list -o raw`" ]; then
        echo "Registering LAPI"
        %%PREFIX%%/bin/cscli machines add --auto || :
    fi

    CONFIG_DIR=`%%PREFIX%%/bin/cscli config show | grep 'Configuration Folder' | awk -F: '{gsub(/: /,":"); printf "%s", $2}'`
    if [ ! -s "${CONFIG_DIR}/online_api_credentials.yaml" ]; then
        echo "Registering CAPI"
        %%PREFIX%%/bin/cscli capi register || :
    fi

    if [ ! -f "${DATA_DIR}/GeoLite2-City.mmdb" ]; then
        echo "Installing GeoIP enricher"
        %%PREFIX%%/bin/cscli parsers install crowdsecurity/geoip-enrich || :
    fi
}

crowdsec_start()
{
	/usr/sbin/daemon -f -p ${pidfile} -t "${desc}" \
		${command} -c ${crowdsec_config} ${crowdsec_flags}
}

crowdsec_configtest()
{
	echo "Performing sanity check on ${name} configuration."
	eval ${command} -c ${crowdsec_config} -t
}

run_rc_command "$1"
